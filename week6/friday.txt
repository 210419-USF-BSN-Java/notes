Validate incoming http requests using Bean Validation
	- JSR303
	- Specifcation for bean validation
	- from javax.validation
		- allows for validation of content received by controllers
		- can be used on bean properties
			- @NotNull
			- @NotBlank
			- @Min/Max
			- @Positive/Negative
			- @Pattern(regexp="")
				- use Regex expressions
	- used in conjunction to @valid to annotate @RequestBody parameters
		- Spring validates that the request body follows the constraints placed on the class

Lombok
	- Code generation tool
		- @Setter
		- @Getter
		- ...
		- @Data
			- includes setter/getter/equalsHash/String/Constructor
	- Setting up Lombok with your IDE (Lombok plugin)
		- Otherwise IDE might not recognize autogenerated methods
		- cd ~/.m2/repository/org/projectlombok/lombok/[your-version]
		- java -jar lombok-[your-version].jar
		- click specify location
		- find ide executable file
		- click install/update

SwaggerUI
	- API Documentation
	- Spring integrates very nicely with Swagger
	- SetUp
		- <dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>3.0.0</version>
		</dependency>

		- @Bean
		public Docket api() {
			return new Docket(DocumentationType.SWAGGER_2).select().apis(RequestHandlerSelectors.any())
					.paths(PathSelectors.any()).build();
		}
			- include in your SpringBoot Driver class

Actuator (continued)
	- in application.yml
		- To display all actuator endpoints
		management:
 			 endpoints:
    				web:
     				 	exposure:
        					include: "*"
How to handle CORS from SpringApp
	- @CrossOrigin(origins="http://localhost:4200", [otherAttribute], ...)
		- can be placed above a controller class or a specific method
	- Defining a CORS filter to apply to all requests

RestTemplate
	- Spring's "traditional way" to make HTTP calls
		- WebClient more recent
			- async while RestTemplate is synchronous
	