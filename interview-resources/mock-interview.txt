Interview Prep - Peer Review

Guidelines:
- Every morning, meet with at two of your batchmates.
	- 1 interviewer
		- The interviewer's responsibility is to ask 5-6 questions to the interviewee from different sections of the curriculum (include at least one Softskills question)
			- An interview focus can be provided by the interviewee (ie: Focus on Spring topics/softskills/communication)
	- 1 interviewee
		- The interviewee's responsibility is to answer the questions to the best of their ability, if a question is unknown practice answering as you would in an interview setting
	- 1 scribe
		- The scribe's responsibility is to take notes of the question asked and the answer provided by the interviewee in additional to any notes relevant to softskills 
			- Leverage the example excel sheet as a template
- Conduct practice interviews with one another for each of the 3 members and take turns playing each role
- At the end of each interview review the questions asked and discuss/research as needed
- Feel free to provide constructive criticism but do so in a professional manner
- Once all of the interviews are completed, push the notes taken for each individual to the standup-notes repository.

Question Structures
Soft Skills Section: (These are just examples, feel free to come up with your own)

Tell me about yourself
Tell me about your last project(you should ALWAYS include the technology stack in your explanation)
What was your role?
Did you use a software development methodology?
What challenges did you face? How did you overcome those challenges?
What is your favorite thing about ____ (technology)?
Tell me about a time that you had a disagreement with a teammate. How did you overcome this?
If you were given a new technology to learn for a project in a week, how would you tackle this?

Technical Section:
	- Core Java/SQL
	- Back End Frameworks (Hibernate, Spring)
	- Web Technologies (Servlets, HTML/CSS, JavaScript)
	- Angular
	- DevOps, etc. (AWS, Docker, Microservices)
	- Agile/SDLC
	- Database Concepts (ACID, Normalization, ERD/Multiplicity)
	- Architecture (REST/HTTP, Microservices, Full-stack architecture)
	- Framework (Hibernate/JPA mapping, Angular component/service, SpringWeb controller, etc)
